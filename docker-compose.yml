version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:3500:3500"
    depends_on:
      - redis
    volumes:
      - ./client:/usr/app
      - /usr/app/node_modules
    stdin_open: true
    tty: true

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - redis
    volumes:
      - ./server:/usr/app
      - /usr/app/node_modules
    environment:
      REDIS_HOST: ${REDIS_HOST}

  redis:
    image: redislabs/rejson:latest
    container_name: redis.redisshoppingcart
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PWD}
    command: redis-server --loadmodule "/usr/lib/redis/modules/rejson.so" --requirepass "${REDIS_PWD}"
    ports:
      - "127.0.0.1:6379:6379"

  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    volumes:
      - ./server/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:7.1.5
    container_name: grafana
    volumes:
      - ./server/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - monitoring

networks:
  monitoring:
    driver: bridge

volumes:
  db_data:
  prometheus_data: {}
  grafana_data: {}
